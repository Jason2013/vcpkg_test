# name: CI
# 
# on: [push]
# 
# jobs:
#   build:
# 
#     runs-on: ubuntu-latest
#     
#     steps:
#     - uses: actions/checkout@v1
#     - name: Run a one-line script
#       run: echo Hello, world!
#     - name: Run a multi-line script
#       run: |
#         echo Add other actions to build,
#         echo test, and deploy your project.

name: Build Check
on: push
jobs:
    build:
        name: test build
        runs-on: windows-latest
        strategy:
            fail-fast: false
            matrix:
                visualstudio: ["Visual Studio 16 2019"]
                #, "Visual Studio 15 2017"]
                architecture:
                    - x64
                    - x86
                config:
                    - Debug
                    - Release
                include:
                    - architecture: x64
                      platform: x64
                      triplet: x64-windows-static
                    - architecture: x86
                      platform: Win32
                      triplet: x86-windows-static
        steps:
            - uses: actions/checkout@v2
            # https://github.com/marketplace/actions/setup-python-environment
            - uses: actions/setup-python@v1
              with:
                  python-version: '3.x'
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                path: c:\vcpkg\installed # npm cache files are stored in `~/.npm` on Linux/macOS
                key: ${{ runner.os }}-vcpkg-${{ matrix.architecture }}-${{ hashFiles('**/build_github_actions.py') }}
                # restore-keys: |
                #   ${{ runner.os }}-node-${{ env.cache-name }}-
                #   ${{ runner.os }}-node-
                #   ${{ runner.os }}-
            - run: |
                cmake --version
                cmake --help
                python --version
              shell: cmd
            # - run: git --version
#            - run: python show.py "${{ matrix.visualstudio }}"
#              shell: bash
            - run: |
                cd
                set
              shell: cmd
            # - run: vcpkg list
#            - name: Install ${{ matrix.architecture }} ${{ matrix.config }}
#              run: |
#                  python build_github_actions.py install "${{ matrix.visualstudio }}" ${{ matrix.architecture }} ${{ matrix.config }}
#                  type install.bat
#                  install.bat
#              shell: cmd
            - name: Install Vcpkg packages (${{ matrix.architecture }})
              run: vcpkg install --triplet ${{ matrix.triplet }} glew glfw3 glm
              shell: cmd
#            - name: Build ${{ matrix.architecture }} ${{ matrix.config }}
#              run: |
#                  python build_github_actions.py build "${{ matrix.visualstudio }}" ${{ matrix.architecture }} ${{ matrix.config }} ${{ matrix.platform }}
#                  type build.bat
#                  build.bat
#                  # cd %GITHUB_WORKSPACE%
#                  # if not exist "build${{ matrix.visualstudio }}" mkdir "build${{ matrix.visualstudio }}"
#                  # cd "build${{ matrix.visualstudio }}"
#                  # cmake -G"${{ matrix.visualstudio }}" ..
#                  # cmake --build . --config ${{ matrix.config }}
#              shell: cmd
            - name: Build project (${{ matrix.architecture }}, ${{ matrix.config }})
              run: |
                mkdir build
                cd build
                cmake -A ${{ matrix.platform }} -G"${{ matrix.visualstudio }}" -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} ..
                cmake --build . --config ${{ matrix.config }}
                cd ..
#    CMAKE_COMMAND1 = 'cmake -G"{VISUALSTUDIO}" -A {PLATFORM} -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET={ARCHITECTURE}-windows ..\n'.format(VISUALSTUDIO=visualstudio, PLATFORM=platform, ARCHITECTURE=architecture)
#                cmake --
#            - name: show files
#              run: dir
#              shell: cmd
            # - name: Test ${{ matrix.config }}
            #   run: |
            #       cd
            #       hello
            #   shell: cmd
            #   working-directory: build${{ matrix.visualstudio }}\${{ matrix.config }}
            # - name: Build Release
            #   run: |
            #       cd %GITHUB_WORKSPACE%
            #       if not exist build mkdir build
            #       cd build
            #       cmake ..
            #       cmake --build . --config Release
            #   shell: cmd
            # - name: Test Release
            #   run: |
            #       cd
            #       hello
            #   shell: cmd
            #   working-directory: build\Release
            # - name: Install VCPKG Packages
            #   run: |
            #       cd %GITHUB_WORKSPACE%
            #       cd
            #       dir
            #       python build_github_actions.py install
            #       type install.bat
            #       install.bat
            #   # run: python %GITHUB_WORKSPACE%\build_github_actions.py install
            # # - run: type install.bat
            # # - run: install.bat
            # - name: Build VCPKG Packages
            #   run: |
            #       cd %GITHUB_WORKSPACE%
            #       python build_github_actions.py build
            #       type build.bat
            #       build.bat


# # install: true
# image:
#   - Visual Studio 2015
#   - Visual Studio 2017
# 
# matrix:
#   fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
#   # allow_failures:
#   #   - platform: x86
#   #     configuration: Debug
#   #   - platform: x86
#   #     configuration: Release
#   #   - platform: x64
#   #     configuration: Debug
#   #   - platform: x64
#   #     configuration: Release
# 
# platform:
#   - x86
#   - x64
# 
# configuration:
#   - Debug
#   - Release
# 
# skip_commits:
#   files:
#     - README.md
# 
# cache:
#   - C:\Tools\vcpkg\installed\ -> appveyor.yml
#   - '%APPVEYOR_BUILD_FOLDER%\build -> CMakeLists.txt'
# 
# install:
#   - cmd: C:\Python36-x64\python.exe build.py install
#   - cmd: type install.bat
#   - cmd: install.bat
#   # - cmd: vcpkg install glew:x86-windows
#   # - cmd: vcpkg install glfw3:x64-windows
#   # - cmd: vcpkg install glfw3:x86-windows
#   # - cmd: vcpkg install glm:x64-windows
#   # - cmd: vcpkg install glm:x86-windows
# 
# # glew:x64-windows                                   2.1.0-1          The OpenGL Extension Wrangler Library (GLEW) is ...
# # glew:x86-windows                                   2.1.0-1          The OpenGL Extension Wrangler Library (GLEW) is ...
# # glfw3:x64-windows                                  3.2.1-3          GLFW is a free, Open Source, multi-platform libr...
# # glfw3:x86-windows                                  3.2.1-3          GLFW is a free, Open Source, multi-platform libr...
# # glm:x64-windows                                    0.9.9.2          OpenGL Mathematics (GLM) https://glm.g-truc.net
# # glm:x86-windows
# 
# build:
#   parallel: true
# 
# before_build:
#   - cmd: cmake --version
#   - cmd: git --version
#   - cmd: set
#   - cmd: vcpkg list
# 
# build_script:
#   - cmd: C:\Python36-x64\python.exe build.py build
#   - cmd: type build.bat
#   - cmd: build.bat
